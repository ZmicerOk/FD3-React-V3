Разработать компонент Sprite, который отображает CSS-спрайт. 
Реквизиты спрайта передаются живыми входными свойствами url, offset-x, offset-y, width, height. При щелчке спрайт выдаёт событие clicked. 
Хост-компонент при приёме события clicked должен переключать спрайт на отображение другого изображения. 
В качестве спрайт-листа можно использовать: http://fe.it-academy.by/Examples/cards2.png

Разработать чистый (pure) канал numword, который строит строку типа "25 яблок", правильно подбирая падеж существительного. 
Логику можно взять отсюда. 
Три падежа существительного должны передаваться в виде аргументов канала. 
Отобразить поле ввода числа, рядом с полем отобразить фразу «У вас 22 яблока», используя примерно такой синтаксис:
У вас {{apples.value|numword:'яблоко':'яблока':'яблок'}}

Разработать проект Cinema (кинотеатр).
Один компонент Hall (зал) отображён на веб-странице в одном экземпляре. Он отображает количество свободных, занятых, всех мест в зале.
Другой компонент Cash (касса) на веб-странице представлен в двух экземплярах — очная касса и интернет-касса. Он позволяет заказать билет (нажатием кнопки) и получить его номер. Билеты выделяются на случайных свободных местах. Можно заказать сразу несколько билетов, расположенных рядом (вводится количество).
Вся работа с билетами (предоставление количества свободных/занятых, продажа билета) делается в службе Tickets (пул билетов).

Разработать атрибутную директиву sprite-bg, который отображает CSS-спрайт на фоне элемента, к которому применена. 
Реквизиты спрайта передаются в атрибутах sprite-url, sprite-offset-x, sprite-offset-y, sprite-width, sprite-height. Все реквизиты должны иметь умолчательные значения; при неуказании атрибутов директива должна отображать смайлик. 
В качестве спрайт-листа можно использовать: http://fe.it-academy.by/Examples/smileys.png

Разработать проект Cinema2 на основе проекта Cinema.
Доработать компонент Hall (зал), он должен также отображать (в виде прямоугольника) все места в кинозале с пометками "занято" или "свободно".
Служба Tickets (пул билетов) должна быть Observable<Array<boolean>>, в поток рассылаются изменения рассадки (при каждой продаже билета — в поток направляется новое событие с массивом boolean, которые показывают, занято каждое место или свободно).